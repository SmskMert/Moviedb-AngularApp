
stages:
  - build
  - test
  - sonarqube-check
  - pages

before_script:
    - cd web-ui-layer

build:
  stage: build
  image: node:latest
  tags:
    - linux
    - docker
  script:
    - npm install -g @angular/cli
    - npm i
    - npm run build

test:
  stage: test
  image: roping4473/node-chrome:v1
  tags:
    - linux
    - docker
  script:
    - export CHROME_BIN=/usr/bin/google-chrome
    - npm ci
    - npm run test:ci

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'ci-cd'
    - if: $CI_COMMIT_BRANCH == 'develop'


pages:
  stage: pages
  image: node:latest
  tags:
    - linux
    - docker
  script:
    - npm install -g @angular/cli
    - npm i
    - npm run ci:prod
  artifacts:
    paths:
      - public
  only:
    - ci-cd